---
const currentPath = Astro.url.pathname;
---

<nav class="main-navigation">
  <div class="nav-container">
    <a href="/" class="nav-brand">
      <span class="brand-name">GÖKHAN TURHAN</span>
    </a>
    
    <ul class="nav-links">
      <li>
        <a href="/" class={currentPath === '/' ? 'nav-link active' : 'nav-link'}>
          Home
        </a>
      </li>
      <li>
        <a href="/blog" class={currentPath.startsWith('/blog') ? 'nav-link active' : 'nav-link'}>
          Journal
        </a>
      </li>
      <li>
        <a href="/interviews" class={currentPath === '/interviews' ? 'nav-link active' : 'nav-link'}>
          Interviews
        </a>
      </li>
      <li>
        <a href="/links" class={currentPath === '/links' ? 'nav-link active' : 'nav-link'}>
          Links
        </a>
      </li>
      <li>
        <button id="nav-theme-toggle" class="nav-theme-toggle" aria-label="Toggle dark mode">
          <span class="theme-icon">🌙</span>
        </button>
      </li>
      <li>
        <a href="/subscribe" class="nav-subscribe">
          Subscribe
        </a>
      </li>
    </ul>
    
    <button class="nav-toggle" aria-label="Toggle navigation">
      <span class="nav-toggle-line"></span>
      <span class="nav-toggle-line"></span>
      <span class="nav-toggle-line"></span>
    </button>
  </div>
</nav>

<style>
  .main-navigation {
    background: var(--nav-bg);
    border-bottom: 1px solid var(--border-light);
    position: sticky;
    top: 0;
    z-index: 100;
    backdrop-filter: blur(10px);
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  }
  
  .nav-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 2rem;
    display: flex;
    justify-content: space-between;
    align-items: center;
    height: 70px;
  }
  
  .nav-brand {
    text-decoration: none;
    color: var(--nav-text);
    font-weight: 700;
    font-size: 1.25rem;
    letter-spacing: -0.02em;
    transition: color 0.2s ease;
  }
  
  .nav-brand:hover {
    color: var(--nav-accent);
  }
  
  .nav-brand:focus {
    outline: 3px solid var(--border-focus);
    outline-offset: 2px;
    border-radius: 4px;
  }
  
  .brand-name {
    position: relative;
  }
  
  .brand-name::after {
    content: '';
    position: absolute;
    bottom: -3px;
    left: 0;
    width: 100%;
    height: 2px;
    background: var(--nav-accent);
    transform: scaleX(0);
    transition: transform 0.2s ease;
  }
  
  .nav-brand:hover .brand-name::after {
    transform: scaleX(1);
  }
  
  .nav-links {
    display: flex;
    list-style: none;
    margin: 0;
    padding: 0;
    gap: 2rem;
  }
  
  .nav-link {
    color: var(--nav-text);
    text-decoration: none;
    font-weight: 500;
    padding: 0.5rem 1rem;
    border-radius: 6px;
    transition: all 0.2s ease;
    position: relative;
    letter-spacing: 0.01em;
  }
  
  .nav-link:hover {
    color: var(--nav-accent);
    background: var(--bg-tertiary);
  }
  
  .nav-link:focus {
    outline: 3px solid var(--border-focus);
    outline-offset: 2px;
    background: rgba(21, 101, 192, 0.1);
  }
  
  .nav-link.active {
    color: var(--nav-accent);
    background: transparent;
    font-weight: 600;
  }
  
  .nav-link.active::before {
    content: '';
    position: absolute;
    bottom: 0;
    left: 50%;
    transform: translateX(-50%);
    width: 20px;
    height: 2px;
    background: var(--nav-accent);
    border-radius: 1px;
  }
  
  .nav-subscribe {
    background: var(--btn-primary-bg);
    color: var(--btn-primary-text) !important;
    text-decoration: none;
    font-weight: 600;
    padding: 0.5rem 1rem;
    border-radius: 6px;
    transition: all 0.2s ease;
    letter-spacing: 0.01em;
    font-size: 0.875rem;
    border: 2px solid var(--btn-primary-bg);
  }
  
  .nav-subscribe:hover {
    background: var(--btn-primary-hover);
    color: var(--btn-primary-text) !important;
    border-color: var(--btn-primary-hover);
    transform: translateY(-1px);
    box-shadow: 0 2px 8px rgba(21, 101, 192, 0.3);
  }
  
  .nav-subscribe:focus {
    outline: 3px solid var(--border-focus);
    outline-offset: 2px;
  }
  
  .nav-theme-toggle {
    background: none;
    border: none;
    color: var(--nav-text);
    font-size: 1.2rem;
    padding: 0.5rem;
    border-radius: 6px;
    cursor: pointer;
    transition: all 0.2s ease;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  .nav-theme-toggle:hover {
    background: var(--bg-tertiary);
    color: var(--nav-accent);
  }
  
  .nav-theme-toggle:focus {
    outline: 3px solid var(--border-focus);
    outline-offset: 2px;
    background: rgba(21, 101, 192, 0.1);
  }
  
  .nav-toggle {
    display: none;
    flex-direction: column;
    background: none;
    border: none;
    cursor: pointer;
    padding: 0.5rem;
    gap: 4px;
  }
  
  .nav-toggle-line {
    width: 24px;
    height: 3px;
    background: var(--nav-text);
    border-radius: 2px;
    transition: all 0.2s ease;
  }
  
  .nav-toggle:hover .nav-toggle-line {
    background: var(--nav-accent);
  }
  
  .nav-toggle:focus {
    outline: 3px solid var(--border-focus);
    outline-offset: 2px;
    border-radius: 4px;
  }
  
      /* Mobile Navigation */
    @media (max-width: 768px) {
      .nav-container {
        padding: 0 1rem;
      }
      
      .nav-links {
        display: none;
        position: absolute;
        top: 100%;
        left: 0;
        right: 0;
        background: var(--nav-bg);
        border-bottom: 1px solid var(--border-light);
        flex-direction: column;
        padding: 1rem 0;
        gap: 0;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
      }
      
      .nav-links.active {
        display: flex;
      }
      
      .nav-link {
        padding: 1rem 2rem;
        border-radius: 0;
        border-bottom: 1px solid var(--border-light);
        background: transparent;
      }
      
      .nav-link:hover {
        background: var(--bg-tertiary);
      }
      
      .nav-theme-toggle {
        margin: 0.5rem 2rem;
        padding: 0.75rem;
        justify-content: flex-start;
        border-bottom: 1px solid var(--border-light);
      }
      
      .nav-subscribe {
        margin: 0.5rem 2rem;
        padding: 0.75rem 1rem;
      }
      
      .nav-link.active::before {
        display: none;
      }
      
      .nav-toggle {
        display: flex;
      }
    }
  
  /* Dark mode adjustments */
  [data-theme="dark"] .main-navigation {
    background: var(--nav-bg);
    backdrop-filter: blur(10px);
    border-bottom-color: var(--border-medium);
  }
  
  [data-theme="dark"] .nav-links {
    background: var(--nav-bg);
    border-bottom-color: var(--border-medium);
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const navToggle = document.querySelector('.nav-toggle');
    const navLinks = document.querySelector('.nav-links');
    
    if (navToggle && navLinks) {
      navToggle.addEventListener('click', function() {
        navLinks.classList.toggle('active');
        navToggle.classList.toggle('active');
      });
      
      // Close menu when clicking on a link
      const links = navLinks.querySelectorAll('.nav-link');
      links.forEach(link => {
        link.addEventListener('click', function() {
          navLinks.classList.remove('active');
          navToggle.classList.remove('active');
        });
      });
      
      // Close menu when clicking outside
      document.addEventListener('click', function(event) {
        const target = event.target as Node;
        if (!navToggle.contains(target) && !navLinks.contains(target)) {
          navLinks.classList.remove('active');
          navToggle.classList.remove('active');
        }
      });
    }
    
    // Theme toggle functionality
    const themeToggle = document.getElementById('nav-theme-toggle');
    const themeIcon = themeToggle?.querySelector('.theme-icon');
    
    if (themeToggle && themeIcon) {
      // Check for saved theme preference or default to light mode
      const currentTheme = localStorage.getItem('theme') || 'light';
      document.documentElement.setAttribute('data-theme', currentTheme);
      
      // Update icon based on current theme
      function updateThemeIcon(theme: string) {
        if (themeIcon) {
          themeIcon.textContent = theme === 'dark' ? '☀️' : '🌙';
        }
      }
      
      updateThemeIcon(currentTheme);
      
      themeToggle.addEventListener('click', () => {
        const currentTheme = document.documentElement.getAttribute('data-theme');
        const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
        
        document.documentElement.setAttribute('data-theme', newTheme);
        localStorage.setItem('theme', newTheme);
        updateThemeIcon(newTheme);
      });
    }
  });
</script>