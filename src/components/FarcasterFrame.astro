---
export interface Props {
  title: string;
  description?: string;
  image?: string;
  buttonText?: string;
  postUrl?: string;
  aspectRatio?: '1.91:1' | '1:1';
  type?: 'blog' | 'home' | 'subscribe' | 'custom';
}

const { 
  title,
  description,
  image,
  buttonText = "Read More",
  postUrl,
  aspectRatio = "1.91:1",
  type = "custom"
} = Astro.props;

// Generate frame image URL based on type and content
function generateFrameImageUrl(type: string, title: string): string {
  const baseUrl = Astro.site?.toString() || 'https://gokhanturhan.com';
  
  switch (type) {
    case 'blog':
      // For blog posts, we'll create a dynamic image with the title
      const encodedTitle = encodeURIComponent(title);
      return `${baseUrl}/api/frame-image?type=blog&title=${encodedTitle}`;
    case 'home':
      return `${baseUrl}/images/frame-home.png`;
    case 'subscribe':
      return `${baseUrl}/images/frame-subscribe.png`;
    default:
      return image || `${baseUrl}/og-image.jpg`;
  }
}

// Generate post URL for frame interactions
function generatePostUrl(type: string): string {
  const baseUrl = Astro.site?.toString() || 'https://gokhanturhan.com';
  return postUrl || `${baseUrl}/api/frame`;
}

const frameImage = generateFrameImageUrl(type, title);
const framePostUrl = generatePostUrl(type);
---

<!-- Farcaster Frame Meta Tags -->
<meta property="fc:frame" content="vNext" />
<meta property="fc:frame:image" content={frameImage} />
<meta property="fc:frame:image:aspect_ratio" content={aspectRatio} />
<meta property="fc:frame:button:1" content={buttonText} />
<meta property="fc:frame:post_url" content={framePostUrl} />

{/* Additional frame properties based on type */}
{type === 'blog' && (
  <>
    <meta property="fc:frame:button:1:action" content="link" />
    <meta property="fc:frame:button:1:target" content={Astro.url.href} />
  </>
)}

{type === 'subscribe' && (
  <>
    <meta property="fc:frame:button:1:action" content="post" />
    <meta property="fc:frame:button:2" content="View Site" />
    <meta property="fc:frame:button:2:action" content="link" />
    <meta property="fc:frame:button:2:target" content={Astro.site?.toString() || 'https://gokhanturhan.com'} />
  </>
)}

{type === 'home' && (
  <>
    <meta property="fc:frame:button:1:action" content="link" />
    <meta property="fc:frame:button:1:target" content={Astro.site?.toString() || 'https://gokhanturhan.com'} />
    <meta property="fc:frame:button:2" content="Subscribe" />
    <meta property="fc:frame:button:2:action" content="link" />
    <meta property="fc:frame:button:2:target" content={`${Astro.site?.toString() || 'https://gokhanturhan.com'}/subscribe`} />
  </>
)}

<!-- Enhanced Open Graph for better fallback -->
<meta property="og:image" content={frameImage} />
{description && <meta property="og:description" content={description} />}