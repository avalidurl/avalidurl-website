---
import { env } from '../utils/env.js';

interface Props {
  id?: string;
  class?: string;
  theme?: 'light' | 'dark' | 'auto';
  size?: 'normal' | 'compact' | 'invisible';
  callback?: string;
  'expired-callback'?: string;
  'error-callback'?: string;
}

const { 
  id = 'cf-turnstile', 
  class: className = '', 
  theme = 'auto',
  size = 'normal',
  callback,
  'expired-callback': expiredCallback,
  'error-callback': errorCallback
} = Astro.props;

// Try multiple approaches to get the site key
const siteKey = env.TURNSTILE_SITE_KEY || 
                (typeof import.meta.env !== 'undefined' ? import.meta.env.TURNSTILE_SITE_KEY : null);

// Debug logging
console.log('TurnstileWidget - siteKey:', siteKey ? 'SET' : 'NOT_SET');
console.log('TurnstileWidget - import.meta.env keys:', typeof import.meta.env !== 'undefined' ? Object.keys(import.meta.env).filter(key => key.includes('TURNSTILE')) : 'N/A');

// TEMPORARY: Use a test site key to see if the widget renders
const testSiteKey = '1x00000000000000000000AA';
---

<div 
  id={id}
  class={`cf-turnstile ${className}`}
  data-sitekey={siteKey || testSiteKey}
  data-theme={theme}
  data-size={size}
  data-callback={callback}
  data-expired-callback={expiredCallback}
  data-error-callback={errorCallback}
></div>

<script src="https://challenges.cloudflare.com/turnstile/v0/api.js" async defer></script>

<script>
  // Handle missing site key
  document.addEventListener('DOMContentLoaded', function() {
    const turnstileElements = document.querySelectorAll('.cf-turnstile');
    turnstileElements.forEach(function(element) {
      const siteKey = element.getAttribute('data-sitekey');
      console.log('Turnstile element siteKey:', siteKey ? 'SET' : 'NOT_SET');
      if (!siteKey || siteKey === '') {
        console.warn('Turnstile site key is missing. CAPTCHA will not function.');
        (element as HTMLElement).style.display = 'none';
      }
    });
  });
</script>

<style>
  .cf-turnstile {
    margin: 1rem 0;
    display: flex;
    justify-content: center;
  }
  
  /* Dark theme adjustments */
  [data-theme="dark"] .cf-turnstile {
    filter: invert(1) hue-rotate(180deg);
  }
  
  /* Compact size */
  .cf-turnstile[data-size="compact"] {
    transform: scale(0.8);
    transform-origin: center;
  }
</style> 