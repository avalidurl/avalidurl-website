---
import { Image } from 'astro:assets';

export interface Props {
  contractAddress: string;
  tokenId: string;
  marketplace?: 'foundation' | 'rarible';
}

const { contractAddress, tokenId, marketplace = 'foundation' } = Astro.props;

let nftData = null;
try {
  const response = await fetch(`${Astro.url.origin}/api/nft?contract=${contractAddress}&token=${tokenId}`);
  if (response.ok) {
    nftData = await response.json();
  }
} catch (error) {
  console.error('Failed to fetch NFT data:', error);
}

const marketplaceUrls = {
  foundation: `https://foundation.app/mint/eth/${contractAddress}/${tokenId}`,
  rarible: `https://rarible.com/token/${contractAddress}:${tokenId}`
};
---

{nftData ? (
  <div class="nft-card">
    <a href={marketplaceUrls[marketplace]} target="_blank" rel="noopener noreferrer">
      {nftData.image && (
        <img 
          src={nftData.image}
          alt={nftData.name}
          loading="lazy"
          class="nft-image"
        />
      )}
      <div class="nft-info">
        <h3 class="nft-title">{nftData.name}</h3>
        {nftData.description && (
          <p class="nft-description">{nftData.description.slice(0, 100)}...</p>
        )}
        <span class="marketplace-link">View on {marketplace}</span>
      </div>
    </a>
  </div>
) : (
  <div class="nft-fallback">
    <a href={marketplaceUrls[marketplace]} target="_blank" rel="noopener noreferrer">
      <div class="nft-info">
        <h3>NFT #{tokenId}</h3>
        <p>Contract: {contractAddress.slice(0, 8)}...</p>
        <span class="marketplace-link">View on {marketplace}</span>
      </div>
    </a>
  </div>
)}

<style>
  .nft-card, .nft-fallback {
    border: 1px solid #e0e0e0;
    border-radius: 12px;
    overflow: hidden;
    margin: 1rem 0;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    background: white;
    max-width: 400px;
  }
  
  .nft-card:hover, .nft-fallback:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
  }
  
  .nft-card a, .nft-fallback a {
    text-decoration: none;
    color: inherit;
    display: block;
  }
  
  .nft-image {
    width: 100%;
    height: 300px;
    object-fit: cover;
    display: block;
  }
  
  .nft-info {
    padding: 1rem;
  }
  
  .nft-title {
    margin: 0 0 0.5rem 0;
    font-size: 1.1rem;
    font-weight: 600;
    color: #333;
  }
  
  .nft-description {
    margin: 0 0 0.75rem 0;
    font-size: 0.9rem;
    color: #666;
    line-height: 1.4;
  }
  
  .marketplace-link {
    font-size: 0.8rem;
    color: #0066cc;
    font-weight: 500;
    text-transform: capitalize;
  }
  
  .nft-fallback .nft-info {
    padding: 2rem;
    text-align: center;
    background: #f9f9f9;
  }
</style>