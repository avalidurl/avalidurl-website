---
import Layout from '../../layouts/Layout.astro';
import { getCollection } from 'astro:content';

export const prerender = true;

export async function getStaticPaths() {
  const allPosts = await getCollection('blog', ({ data }) => {
    return !data.draft && new Date(data.publishDate) <= new Date();
  });

  // Get all unique years
  const years = [...new Set(allPosts.map(post => 
    new Date(post.data.publishDate).getFullYear()
  ))];

  return years.map(year => ({
    params: { year: year.toString() },
    props: { 
      year,
      posts: allPosts
        .filter(post => new Date(post.data.publishDate).getFullYear() === year)
        .sort((a, b) => new Date(b.data.publishDate).getTime() - new Date(a.data.publishDate).getTime())
    },
  }));
}

const { year, posts } = Astro.props;
---

<Layout title={`${year} Archive - All Posts`} description={`All blog posts from ${year} - exploring finance, art, and technology.`}>
  <main class="container">
    <header class="archive-header">
      <div class="archive-breadcrumb">
        <a href="/blog">Journal</a> → <a href="/archive">Archive</a> → <span>{year}</span>
      </div>
      
      <h1>Posts from {year}</h1>
      <p class="archive-description">
        {posts.length} {posts.length === 1 ? 'post' : 'posts'} published in {year}
      </p>
    </header>
    
    <section class="archive-posts">
      <div class="articles-list">
        {posts.map(post => (
          <article class="article-item">
            <div class="article-line">
              <time class="article-date">
                <a href={`/archive/${new Date(post.data.publishDate).getFullYear()}/${new Date(post.data.publishDate).toLocaleDateString('en-US', { month: 'long' }).toLowerCase()}`} class="date-link" title={`See ${new Date(post.data.publishDate).toLocaleDateString('en-US', { month: 'long' })} ${new Date(post.data.publishDate).getFullYear()}'s archive`}>
                  {new Date(post.data.publishDate).toLocaleDateString('en-CA')}
                </a>
              </time>
              <a href={`/blog/${post.slug}`} class="article-title">
                {post.data.title}
              </a>
              {post.data.category && (
                <div class="article-category">
                  <a href={`/categories/${post.data.category.toLowerCase().replace(/\s+/g, '-').replace('&', 'and')}`} class="article-category-link">
                    {post.data.category}
                  </a>
                </div>
              )}
            </div>
          </article>
        ))}
      </div>
      
      {posts.length === 0 && (
        <div class="no-posts">
          <p>No posts found for {year}.</p>
          <a href="/blog" class="back-to-blog">← Back to Journal</a>
        </div>
      )}
    </section>
    
    <footer class="archive-footer">
      <a href="/blog" class="back-to-blog">← Back to Journal</a>
      <a href="/archive" class="archive-index">View All Years →</a>
    </footer>
  </main>
</Layout>

<style>
  .container {
    max-width: 1000px;
    margin: 0 auto;
    padding: 2rem 1rem;
  }
  
  .archive-header {
    text-align: center;
    margin-bottom: 3rem;
    padding-bottom: 2rem;
    border-bottom: 1px solid var(--border-light);
    position: relative;
  }
  
  .archive-header::after {
    content: '';
    position: absolute;
    bottom: -1px;
    left: 50%;
    transform: translateX(-50%);
    width: 80px;
    height: 1px;
    background: var(--color-primary);
  }
  
  .archive-breadcrumb {
    margin-bottom: 1rem;
    font-size: 0.875rem;
    color: var(--text-muted);
  }
  
  .archive-breadcrumb a {
    color: var(--color-primary);
    text-decoration: none;
    font-weight: 500;
  }
  
  .archive-breadcrumb a:hover {
    text-decoration: underline;
  }
  
  .archive-header h1 {
    font-size: 2.5rem;
    color: var(--text-primary);
    margin-bottom: 1rem;
    font-weight: 700;
  }
  
  .archive-description {
    color: var(--text-muted);
    font-size: 1.125rem;
    margin: 0;
  }
  
  .articles-list {
    padding: 0;
    margin-bottom: 0;
  }

  .article-item {
    margin: 0;
    padding: 0;
  }

  .article-line {
    display: flex;
    align-items: baseline;
    gap: 1rem;
    padding: 0.5rem 0;
    margin-bottom: 0.25rem;
    transition: background-color 0.2s ease;
    border-bottom: 1px solid transparent;
  }

  .article-line:hover {
    background: rgba(0, 0, 0, 0.02);
  }

  .article-date {
    color: var(--text-muted);
    font-size: 0.75rem;
    font-weight: 400;
    line-height: 1.4;
    white-space: nowrap;
    flex-shrink: 0;
    min-width: 80px;
  }

  .date-link {
    color: var(--text-muted);
    text-decoration: none;
    transition: color 0.2s ease;
    border-bottom: 1px solid transparent;
  }

  .date-link:hover {
    color: var(--color-primary);
    border-bottom-color: var(--color-primary);
  }

  .date-link:visited {
    color: var(--text-muted);
  }

  .date-link:visited:hover {
    color: var(--color-primary);
    border-bottom-color: var(--color-primary);
  }

  .article-title {
    color: var(--text-primary);
    text-decoration: none;
    font-size: 0.85rem;
    font-weight: 400;
    line-height: 1.4;
    transition: color 0.2s ease;
    border-bottom: 1px dotted var(--text-muted);
    flex: 1;
    min-width: 0;
  }

  .article-title:hover {
    color: var(--color-primary);
    border-bottom-color: var(--color-primary);
  }

  .article-category {
    display: flex;
    align-items: baseline;
    flex-shrink: 0;
    min-height: 1.4em;
  }

  .article-category-link {
    color: var(--blog-warm-white);
    background: var(--blog-sepia);
    font-size: 0.7rem;
    font-weight: 500;
    text-decoration: none;
    transition: all 0.2s ease;
    line-height: 1.2;
    display: inline-flex;
    align-items: center;
    padding: 0.2rem 0.5rem;
    border-radius: 12px;
    border: 1px solid var(--blog-sepia);
  }

  .article-category-link:hover {
    background: var(--blog-bronze);
    border-color: var(--blog-bronze);
    transform: translateY(-1px);
  }

  .article-category-link:visited {
    color: var(--blog-warm-white);
    background: var(--blog-sepia);
  }

  .article-category-link:visited:hover {
    color: var(--blog-warm-white);
    background: var(--blog-bronze);
  }
  
  .no-posts {
    text-align: center;
    padding: 3rem;
    color: var(--text-muted);
  }
  
  .archive-footer {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding-top: 2rem;
    border-top: 1px solid var(--border-light);
  }
  
  .back-to-blog,
  .archive-index {
    color: var(--color-primary);
    font-weight: 500;
    text-decoration: none;
    transition: color 0.3s ease;
  }
  
  .back-to-blog:hover,
  .archive-index:hover {
    color: var(--color-primary-hover);
  }
  
  @media (max-width: 768px) {
    .container {
      padding: 1.5rem 1rem;
    }
    
    .archive-header h1 {
      font-size: 2rem;
    }

    .article-line {
      flex-direction: column;
      align-items: flex-start;
      gap: 0.25rem;
      padding: 0.4rem 0;
    }

    .article-date {
      font-size: 0.7rem;
      min-width: auto;
    }

    .article-title {
      border-bottom: none;
      width: 100%;
    }

    .article-category {
      width: 100%;
    }
    
    .archive-footer {
      flex-direction: column;
      gap: 1rem;
      align-items: center;
    }
  }
  
  @media (max-width: 480px) {
    .container {
      padding: 1rem 0.75rem;
    }

    .article-line {
      padding: 0.75rem;
    }
  }
</style>