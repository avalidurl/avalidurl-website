---
import Layout from '../../layouts/Layout.astro';
import { getCollection } from 'astro:content';
import Breadcrumb from '../../components/Breadcrumb.astro';

const categories = [
  'Finance & Markets',
  'Finance',
  'Crypto & Web3', 
  'Art & Culture',
  'Art Works',
  'Writing',
  'Fiction',
  'Books',
  'People',
  'Technology & Data',
  'Products',
  'General'
];

// Helper function to parse dates consistently in Istanbul timezone
const parseIstanbulDate = (dateString) => {
  if (typeof dateString !== 'string') {
    return new Date(dateString);
  }
  if (dateString.match(/^\d{4}-\d{2}-\d{2}$/)) {
    return new Date(dateString + 'T00:00:00+03:00');
  }
  return new Date(dateString);
};

// Get all blog posts
const allPosts = await getCollection('blog', ({ data }) => {
  if (data.draft) return false;
  
  const publishDate = parseIstanbulDate(data.publishDate);
  const now = new Date();
  const oneDayFromNow = new Date(now.getTime() + 24 * 60 * 60 * 1000);
  
  return publishDate <= oneDayFromNow;
});

// Count posts per category
const categoryCounts = {};
categories.forEach(category => {
  categoryCounts[category] = allPosts.filter(post => post.data.category === category).length;
});

// Category descriptions and colors
const categoryInfo = {
  'Finance & Markets': {
    description: 'Financial analysis, market insights, DeFi protocols, and economic commentary.',
    icon: 'üìà',
    color: 'sepia'
  },
  'Finance': {
    description: 'Traditional finance, banking, investment strategies, and economic analysis.',
    icon: 'üí∞',
    color: 'sepia'
  },
  'Crypto & Web3': {
    description: 'Blockchain technology, cryptocurrency analysis, and decentralized web developments.',
    icon: '‚õìÔ∏è',
    color: 'bronze'
  },
  'Art & Culture': {
    description: 'Conceptual art, cultural criticism, creative writing, and artistic expression.',
    icon: 'üé®',
    color: 'muted-gold'  
  },
  'Art Works': {
    description: 'Creative pieces, visual art, and artistic productions.',
    icon: 'üñºÔ∏è',
    color: 'muted-gold'
  },
  'Writing': {
    description: 'Essays, articles, and written content across various topics.',
    icon: '‚úçÔ∏è',
    color: 'charcoal'
  },
  'Fiction': {
    description: 'Short stories, fictional narratives, and creative storytelling.',
    icon: 'üìö',
    color: 'secondary'
  },
  'Books': {
    description: 'Book reviews, reading notes, and literary discussions.',
    icon: 'üìñ',
    color: 'bronze'
  },
  'People': {
    description: 'Profiles, interviews, and stories about interesting individuals.',
    icon: 'üë•',
    color: 'sepia'
  },
  'Technology & Data': {
    description: 'Technical analysis, data visualization, and emerging technologies.',
    icon: 'üî¨',
    color: 'charcoal'
  },
  'Products': {
    description: 'Digital tools, applications, and product development insights.',
    icon: 'üöÄ',
    color: 'bronze'
  },
  'General': {
    description: 'Daily thoughts, personal reflections, and miscellaneous topics.',
    icon: 'üí≠',
    color: 'secondary'
  }
};

// Breadcrumb items
const breadcrumbItems = [
  { name: 'Home', url: '/' },
  { name: 'Categories', url: '/categories' }
];
---

<Layout 
  title="Browse by Category - G√∂khan Turhan" 
  description="Explore content organized by topic areas: Finance & Markets, Crypto & Web3, Art & Culture, Technology & Data, and General discussions."
>
  <main class="blog-container">
    <!-- Breadcrumb Navigation -->
    <Breadcrumb items={breadcrumbItems} />

    <header class="blog-header">
      <h1>Browse by Category</h1>
      <div class="browse-nav">
        <a href="/blog" class="nav-button">‚Üê All Posts</a>
        <a href="/topics" class="nav-button">Browse Topics ‚Üí</a>
        <a href="/archive" class="nav-button">Browse Archive ‚Üí</a>
      </div>
      <p class="blog-subtitle">
        Explore content organized by topic areas ‚Äî from financial analysis to creative expression.
      </p>
    </header>

    <div class="blog-layout">
      <section class="blog-main">
        <div class="categories-list">
          {categories.map(category => {
            const slug = category.toLowerCase().replace(/\s+/g, '-').replace('&', 'and');
            const info = categoryInfo[category];
            const count = categoryCounts[category];
            
            return (
              <article class="category-item">
                <div class="category-line">
                  <span class="category-icon">{info.icon}</span>
                  <a href={`/categories/${slug}`} class="category-title">
                    {category}
                  </a>
                  <div class="category-meta">
                    <span class="post-count">{count} post{count !== 1 ? 's' : ''}</span>
                  </div>
                </div>
                <p class="category-description">{info.description}</p>
              </article>
            );
          })}
        </div>
      </section>
    </div>
  </main>
</Layout>

<style>
  .browse-nav {
    display: flex;
    gap: 1rem;
    justify-content: center;
    margin: 1.5rem 0;
    flex-wrap: wrap;
  }
  
  .nav-button {
    background: none;
    border: 1px solid var(--border-medium);
    color: var(--text-secondary);
    padding: 0.5rem 1rem;
    border-radius: 6px;
    text-decoration: none;
    font-weight: 500;
    font-size: 0.9rem;
    transition: all 0.2s ease;
    white-space: nowrap;
  }
  
  .nav-button:hover {
    background: var(--color-primary);
    color: var(--text-inverse);
    border-color: var(--color-primary);
    transform: translateY(-1px);
  }

  /* Categories List - Blog Style */
  .categories-list {
    display: flex;
    flex-direction: column;
    gap: 0;
  }
  
  .category-item {
    border-bottom: 1px solid var(--border-light);
    padding: 1.25rem 0;
    transition: all 0.2s ease;
  }
  
  .category-item:last-child {
    border-bottom: none;
  }

  .category-item:hover {
    background: rgba(0, 0, 0, 0.02);
    transform: translateY(-1px);
  }
  
  .category-line {
    display: flex;
    align-items: baseline;
    gap: 1rem;
    flex-wrap: wrap;
    margin-bottom: 0.75rem;
  }
  
  .category-icon {
    font-size: 1.2rem;
    line-height: 1;
    flex-shrink: 0;
  }
  
  .category-title {
    flex: 1;
    color: var(--text-primary);
    text-decoration: none;
    font-weight: 600;
    font-size: 1rem;
    transition: color 0.2s ease;
    border-bottom: 1px dotted var(--text-muted);
  }
  
  .category-title:hover {
    color: var(--color-primary);
    border-bottom-color: var(--color-primary);
  }
  
  .category-meta {
    display: flex;
    align-items: baseline;
    flex-shrink: 0;
  }

  .post-count {
    color: var(--blog-warm-white);
    background: var(--blog-sepia);
    font-size: 0.7rem;
    font-weight: 500;
    text-decoration: none;
    transition: all 0.2s ease;
    line-height: 1.2;
    display: inline-flex;
    align-items: center;
    padding: 0.2rem 0.5rem;
    border-radius: 50px;
    border: 1px solid var(--blog-sepia);
  }
  
  .category-description {
    color: var(--text-muted);
    font-size: 0.9rem;
    line-height: 1.6;
    margin-left: 2.2rem;
    margin-top: 0.5rem;
  }
  
  @media (max-width: 768px) {
    .category-line {
      flex-direction: column;
      align-items: flex-start;
      gap: 0.5rem;
    }
    
    .category-description {
      margin-left: 0;
    }
    
    .category-icon {
      font-size: 1rem;
    }
  }
</style>