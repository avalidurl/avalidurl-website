---
import Layout from '../../../layouts/Layout.astro';
import { getCollection } from 'astro:content';

export const prerender = true;

export async function getStaticPaths() {
  const allProducts = await getCollection('products', ({ data }) => {
    return !data.draft && new Date(data.publishDate) <= new Date();
  });

  // Get all unique years
  const years = [...new Set(allProducts.map(product => 
    new Date(product.data.publishDate).getFullYear()
  ))];

  return years.map(year => ({
    params: { year: year.toString() },
    props: { 
      year,
      products: allProducts
        .filter(product => new Date(product.data.publishDate).getFullYear() === year)
        .sort((a, b) => new Date(b.data.publishDate).getTime() - new Date(a.data.publishDate).getTime())
    },
  }));
}

const { year, products } = Astro.props;
---

<Layout title={`${year} Products Archive`} description={`All products from ${year} - exploring finance, art, and technology.`}>
  <main class="container">
    <header class="archive-header">
      <div class="archive-breadcrumb">
        <a href="/products">Products</a> → <a href="/products/archive">Archive</a> → <span>{year}</span>
      </div>
      
      <h1>Products from {year}</h1>
      <p class="archive-description">
        {products.length} {products.length === 1 ? 'product' : 'products'} released in {year}
      </p>
    </header>
    
    <section class="archive-products">
      <div class="products-list">
        {products.map(product => (
          <article class="product-item">
            <div class="product-line">
              <time class="product-date">
                <a href={`/products/archive/${new Date(product.data.publishDate).getFullYear()}/${new Date(product.data.publishDate).toLocaleDateString('en-US', { month: 'long' }).toLowerCase()}`} class="date-link" title={`See ${new Date(product.data.publishDate).toLocaleDateString('en-US', { month: 'long' })} ${new Date(product.data.publishDate).getFullYear()}'s archive`}>
                  {new Date(product.data.publishDate).toLocaleDateString('en-CA')}
                </a>
              </time>
              <div class="product-content">
                <div class="product-header">
                  <a href={product.data.url} target="_blank" rel="noopener noreferrer" class="product-title">
                    {product.data.title}
                  </a>
                  <span class="product-status" data-status={product.data.status.toLowerCase()}>
                    {product.data.status}
                  </span>
                </div>
                <p class="product-description">
                  {product.data.description}
                </p>
                {(product.data.tech || product.data.tags) && (
                  <div class="product-meta">
                    {product.data.tech && product.data.tech.length > 0 && (
                      <div class="product-tech">
                        {product.data.tech.slice(0, 4).map(tech => (
                          <span class="tech-tag">{tech}</span>
                        ))}
                      </div>
                    )}
                    {product.data.tags && product.data.tags.length > 0 && (
                      <div class="product-tags">
                        {product.data.tags.sort((a, b) => a.localeCompare(b)).slice(0, 3).map(tag => (
                          <a href={`/topics/${tag.toLowerCase().replace(/\s+/g, '-')}`} class="product-tag">
                            {tag}
                          </a>
                        ))}
                      </div>
                    )}
                  </div>
                )}
              </div>
            </div>
          </article>
        ))}
      </div>
      
      {products.length === 0 && (
        <div class="no-products">
          <p>No products found for {year}.</p>
          <a href="/products" class="back-to-products">← Back to Products</a>
        </div>
      )}
    </section>
    
    <footer class="archive-footer">
      <a href="/products" class="back-to-products">← Back to Products</a>
      <a href="/products/archive" class="archive-index">View All Years →</a>
    </footer>
  </main>
</Layout>

<style>
  .container {
    max-width: 1000px;
    margin: 0 auto;
    padding: 2rem 1rem;
  }
  
  .archive-header {
    text-align: center;
    margin-bottom: 3rem;
    padding-bottom: 2rem;
    border-bottom: 1px solid var(--border-light);
    position: relative;
  }
  
  .archive-header::after {
    content: '';
    position: absolute;
    bottom: -1px;
    left: 50%;
    transform: translateX(-50%);
    width: 80px;
    height: 1px;
    background: var(--color-primary);
  }
  
  .archive-breadcrumb {
    margin-bottom: 1rem;
    font-size: 0.875rem;
    color: var(--text-muted);
  }
  
  .archive-breadcrumb a {
    color: var(--color-primary);
    text-decoration: none;
    font-weight: 500;
  }
  
  .archive-breadcrumb a:hover {
    text-decoration: underline;
  }
  
  .archive-header h1 {
    font-size: 2.5rem;
    color: var(--text-primary);
    margin-bottom: 1rem;
    font-weight: 700;
  }
  
  .archive-description {
    color: var(--text-muted);
    font-size: 1.125rem;
    margin: 0;
  }
  
  .products-list {
    padding: 0;
    margin-bottom: 0;
  }

  .product-item {
    margin: 0 0 2rem 0;
    padding: 1.5rem;
    border: 1px solid var(--border-light);
    border-radius: 8px;
    transition: all 0.2s ease;
  }

  .product-item:hover {
    border-color: var(--color-primary);
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  }

  .product-line {
    display: flex;
    gap: 1.5rem;
    align-items: flex-start;
  }

  .product-date {
    color: var(--text-muted);
    font-size: 0.8rem;
    font-weight: 400;
    line-height: 1.4;
    white-space: nowrap;
    flex-shrink: 0;
    min-width: 80px;
    display: flex;
    align-items: center;
  }

  .date-link {
    color: var(--text-muted);
    text-decoration: none;
    transition: color 0.2s ease;
    border-bottom: 1px solid transparent;
  }

  .date-link:hover {
    color: var(--color-primary);
    border-bottom-color: var(--color-primary);
  }

  .product-content {
    flex: 1;
    min-width: 0;
  }

  .product-header {
    display: flex;
    align-items: center;
    gap: 1rem;
    margin-bottom: 0.75rem;
    flex-wrap: wrap;
  }

  .product-title {
    color: var(--text-primary);
    text-decoration: none;
    font-size: 1.125rem;
    font-weight: 600;
    line-height: 1.3;
    transition: color 0.2s ease;
    flex: 1;
    min-width: 0;
  }

  .product-title:hover {
    color: var(--color-primary);
  }

  .product-status {
    background: #22c55e;
    color: white;
    font-size: 0.75rem;
    font-weight: 500;
    padding: 0.25rem 0.5rem;
    border-radius: 4px;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    flex-shrink: 0;
  }

  .product-status[data-status="beta"] {
    background: #f59e0b;
  }

  .product-status[data-status="development"] {
    background: #6366f1;
  }

  .product-status[data-status="archived"] {
    background: #6b7280;
  }

  .product-description {
    color: var(--text-secondary);
    font-size: 0.95rem;
    line-height: 1.5;
    margin-bottom: 1rem;
  }

  .product-meta {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
  }

  .product-tech {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .tech-tag {
    background: var(--color-primary);
    color: white;
    font-size: 0.75rem;
    font-weight: 500;
    padding: 0.25rem 0.5rem;
    border-radius: 4px;
  }

  .product-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0;
    align-items: center;
  }

  .product-tag {
    color: #FF8C00;
    font-size: 0.75rem;
    font-weight: 400;
    text-decoration: none;
    transition: color 0.2s ease;
    line-height: 1.4;
    display: inline-flex;
    align-items: center;
  }

  .product-tag:hover {
    color: #FF4500;
  }

  .product-tag:not(:last-child)::after {
    content: ", ";
    color: var(--text-muted);
  }
  
  .no-products {
    text-align: center;
    padding: 3rem;
    color: var(--text-muted);
  }
  
  .archive-footer {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding-top: 2rem;
    border-top: 1px solid var(--border-light);
  }
  
  .back-to-products,
  .archive-index {
    color: var(--color-primary);
    font-weight: 500;
    text-decoration: none;
    transition: color 0.3s ease;
  }
  
  .back-to-products:hover,
  .archive-index:hover {
    color: var(--color-primary-hover);
  }
  
  @media (max-width: 768px) {
    .container {
      padding: 1.5rem 1rem;
    }
    
    .archive-header h1 {
      font-size: 2rem;
    }

    .product-item {
      padding: 1rem;
      margin-bottom: 1.5rem;
    }

    .product-line {
      flex-direction: column;
      gap: 1rem;
    }

    .product-date {
      font-size: 0.75rem;
      min-width: auto;
    }

    .product-header {
      flex-direction: column;
      align-items: flex-start;
      gap: 0.5rem;
    }

    .product-title {
      font-size: 1rem;
    }

    .product-meta {
      gap: 0.5rem;
    }
    
    .archive-footer {
      flex-direction: column;
      gap: 1rem;
      align-items: center;
    }
  }
  
  @media (max-width: 480px) {
    .container {
      padding: 1rem 0.75rem;
    }

    .product-item {
      padding: 0.75rem;
    }
  }
</style>