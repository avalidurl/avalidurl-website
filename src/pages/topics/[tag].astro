---
import Layout from '../../layouts/Layout.astro';
import { getCollection } from 'astro:content';

export const prerender = true;

export async function getStaticPaths() {
  const allBlogPosts = await getCollection('blog', ({ data }) => {
    return !data.draft && new Date(data.publishDate) <= new Date();
  });

  // Get all unique tags
  const allTags = [...new Set(allBlogPosts.flatMap(post => post.data.tags))];

  return allTags.map(tag => ({
    params: { tag: tag.toLowerCase().replace(/\s+/g, '-') },
    props: { 
      tag,
      posts: allBlogPosts.filter(post => 
        post.data.tags.some(postTag => 
          postTag.toLowerCase().replace(/\s+/g, '-') === tag.toLowerCase().replace(/\s+/g, '-')
        )
      ).sort((a, b) => new Date(b.data.publishDate).getTime() - new Date(a.data.publishDate).getTime())
    },
  }));
}

const { tag, posts } = Astro.props;
const capitalizedTag = tag.charAt(0).toUpperCase() + tag.slice(1);
---

<Layout title={`${capitalizedTag} - Topics`} description={`Articles and posts about ${tag}`}>
  <main class="container">
    <header class="page-header">
      <div class="topic-header">
        <span class="topic-tag">{capitalizedTag}</span>
        <h1>Topic: {capitalizedTag}</h1>
        <p class="topic-description">
          {posts.length} {posts.length === 1 ? 'post' : 'posts'} tagged with "{tag}"
        </p>
      </div>
    </header>
    
    <section class="posts-section">
      <div class="posts-grid">
        {posts.map(post => (
          <article class="post-card">
            <div class="post-meta">
              <span class="post-category">{post.data.category}</span>
              <time class="post-date" datetime={post.data.publishDate.toISOString()}>
                {new Date(post.data.publishDate).toLocaleDateString('en-CA')}
              </time>
            </div>
            
            <h2 class="post-title">
              <a href={`/blog/${post.slug}`}>{post.data.title}</a>
            </h2>
            
            <p class="post-excerpt">
              {post.data.excerpt || post.data.description}
            </p>
            
            <div class="post-tags">
              {post.data.tags.map(postTag => (
                <a href={`/topics/${postTag.toLowerCase().replace(/\s+/g, '-')}`} 
                   class="tag-link" 
                   class:list={[postTag.toLowerCase().replace(/\s+/g, '-') === tag.toLowerCase().replace(/\s+/g, '-') ? 'active' : '']}>
                  {postTag}
                </a>
              ))}
            </div>
            
            {post.data.readingTime && (
              <div class="reading-time">
                {post.data.readingTime} min read
              </div>
            )}
          </article>
        ))}
      </div>
      
      {posts.length === 0 && (
        <div class="no-posts">
          <p>No posts found for this topic.</p>
          <a href="/blog" class="back-to-blog">← Back to Journal</a>
        </div>
      )}
    </section>
    
    <footer class="topic-footer">
      <a href="/blog" class="back-to-blog">← Back to Journal</a>
      <a href="/topics" class="all-topics">View All Topics →</a>
    </footer>
  </main>
</Layout>

<style>
  .container {
    max-width: 1000px;
    margin: 0 auto;
    padding: 2rem 1rem;
  }
  
  .topic-header {
    text-align: center;
    margin-bottom: 3rem;
    padding: 2rem 0;
    border-bottom: 1px solid var(--border-light);
    position: relative;
  }
  
  .topic-header::after {
    content: '';
    position: absolute;
    bottom: -1px;
    left: 50%;
    transform: translateX(-50%);
    width: 80px;
    height: 1px;
    background: var(--color-primary);
  }
  
  .topic-tag {
    background: var(--color-primary);
    color: var(--text-inverse);
    padding: 0.5rem 1rem;
    border-radius: 20px;
    font-size: 0.875rem;
    font-weight: 600;
    letter-spacing: 0.5px;
    text-transform: uppercase;
    display: inline-block;
    margin-bottom: 1rem;
  }
  
  .topic-header h1 {
    font-size: 2.5rem;
    color: var(--text-primary);
    margin-bottom: 1rem;
    font-weight: 700;
  }
  
  .topic-description {
    color: var(--text-muted);
    font-size: 1.125rem;
    margin: 0;
  }
  
  .posts-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 2rem;
    margin-bottom: 3rem;
  }
  
  .post-card {
    background: var(--card-bg);
    border: 1px solid var(--card-border);
    border-radius: 8px;
    padding: 2rem;
    transition: all 0.3s ease;
    position: relative;
  }
  
  .post-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 24px var(--card-shadow);
    border-color: var(--color-primary);
  }
  
  .post-meta {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1rem;
    font-size: 0.875rem;
  }
  
  .post-category {
    background: var(--color-secondary);
    color: var(--text-inverse);
    padding: 0.25rem 0.75rem;
    border-radius: 4px;
    font-weight: 600;
    letter-spacing: 0.3px;
    text-transform: uppercase;
    font-size: 0.75rem;
  }
  
  .post-date {
    color: var(--text-muted);
    font-weight: 500;
  }
  
  .post-title {
    margin: 0 0 1rem 0;
    font-size: 1.25rem;
    line-height: 1.4;
  }
  
  .post-title a {
    color: var(--text-primary);
    text-decoration: none;
    font-weight: 600;
    transition: color 0.3s ease;
  }
  
  .post-title a:hover {
    color: var(--color-primary);
  }
  
  .post-excerpt {
    color: var(--text-secondary);
    line-height: 1.6;
    margin-bottom: 1.5rem;
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .post-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0;
    align-items: center;
    margin-bottom: 1rem;
  }
  
  .tag-link {
    color: #FF8C00;
    font-size: 0.75rem;
    font-weight: 400;
    text-decoration: none;
    transition: color 0.2s ease;
  }
  
  .tag-link:hover {
    color: #FF4500;
  }

  .tag-link:not(:last-child)::after {
    content: ", ";
    color: var(--text-muted);
  }
  
  .tag-link.active {
    background: var(--color-primary);
    color: var(--text-inverse);
    border-color: var(--color-primary);
  }
  
  .reading-time {
    color: var(--text-muted);
    font-size: 0.875rem;
    font-style: italic;
  }
  
  .no-posts {
    text-align: center;
    padding: 3rem;
    color: var(--text-muted);
  }
  
  .topic-footer {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding-top: 2rem;
    border-top: 1px solid var(--border-light);
  }
  
  .back-to-blog,
  .all-topics {
    color: var(--color-primary);
    font-weight: 500;
    text-decoration: none;
    transition: color 0.3s ease;
  }
  
  .back-to-blog:hover,
  .all-topics:hover {
    color: var(--color-primary-hover);
  }
  
  /* Force single column on smaller screens to prevent overflow */
  @media (max-width: 640px) {
    .posts-grid {
      grid-template-columns: 1fr !important;
    }
  }

  @media (max-width: 768px) {
    .container {
      padding: 1.5rem 1rem;
      max-width: 100%;
      overflow-x: hidden;
    }
    
    .posts-grid {
      grid-template-columns: 1fr !important;
      gap: 1.5rem;
      width: 100%;
    }
    
    .topic-header h1 {
      font-size: 2rem;
    }
    
    .post-card {
      padding: 1.5rem;
      width: 100%;
      max-width: 100%;
      box-sizing: border-box;
      margin: 0;
    }
    
    .post-meta {
      flex-direction: column;
      align-items: flex-start;
      gap: 0.5rem;
    }
    
    .topic-footer {
      flex-direction: column;
      gap: 1rem;
      align-items: center;
    }
  }
  
  @media (max-width: 480px) {
    .container {
      padding: 1rem 0.75rem;
      overflow-x: hidden;
    }
    
    .posts-grid {
      grid-template-columns: 1fr !important;
      gap: 1rem;
      width: 100%;
      margin: 0;
    }
    
    .post-card {
      padding: 1.25rem;
      width: 100%;
      max-width: 100%;
      box-sizing: border-box;
      margin: 0;
    }
    
    .post-title {
      font-size: 1.125rem;
      word-break: break-word;
      overflow-wrap: break-word;
    }
    
    .post-excerpt {
      word-break: break-word;
      overflow-wrap: break-word;
    }
  }
</style>