---
import Layout from '../../layouts/Layout.astro';
import { getCollection } from 'astro:content';

export const prerender = true;

export async function getStaticPaths() {
  const allBlogPosts = await getCollection('blog', ({ data }) => {
    return !data.draft && new Date(data.publishDate) <= new Date();
  });

  const allProducts = await getCollection('products', ({ data }) => {
    return !data.draft;
  });

  // Get all unique tags from both blog posts and products
  const blogTags = allBlogPosts.flatMap(post => post.data.tags);
  const productTags = allProducts.flatMap(product => product.data.tags);
  const allTags = [...new Set([...blogTags, ...productTags])];

  return allTags.map(tag => {
    const matchingPosts = allBlogPosts.filter(post => 
      post.data.tags.some(postTag => 
        postTag.toLowerCase().replace(/\s+/g, '-') === tag.toLowerCase().replace(/\s+/g, '-')
      )
    );
    
    const matchingProducts = allProducts.filter(product => 
      product.data.tags.some(productTag => 
        productTag.toLowerCase().replace(/\s+/g, '-') === tag.toLowerCase().replace(/\s+/g, '-')
      )
    );

    return {
      params: { tag: tag.toLowerCase().replace(/\s+/g, '-') },
      props: { 
        tag,
        posts: matchingPosts.sort((a, b) => new Date(b.data.publishDate).getTime() - new Date(a.data.publishDate).getTime()),
        products: matchingProducts.sort((a, b) => new Date(b.data.publishDate).getTime() - new Date(a.data.publishDate).getTime())
      },
    };
  });
}

const { tag, posts, products } = Astro.props;
const capitalizedTag = tag.charAt(0).toUpperCase() + tag.slice(1);
const totalItems = posts.length + products.length;
---

<Layout title={`${capitalizedTag} - Topics`} description={`Articles and posts about ${tag}`}>
  <main class="container">
    <header class="page-header">
      <div class="topic-header">
        <span class="topic-tag">{capitalizedTag}</span>
        <h1>Topic: {capitalizedTag}</h1>
        <p class="topic-description">
          {totalItems} {totalItems === 1 ? 'item' : 'items'} tagged with "{tag}" ({posts.length} {posts.length === 1 ? 'post' : 'posts'}, {products.length} {products.length === 1 ? 'product' : 'products'})
        </p>
      </div>
    </header>
    
    <section class="posts-section">
      {posts.length > 0 && <h2>Journal</h2>}
      <div class="articles-list">
        {posts.map(post => (
          <article class="article-item">
            <div class="article-line">
              <time class="article-date">
                <a href={`/archive/${new Date(post.data.publishDate).getFullYear()}/${new Date(post.data.publishDate).toLocaleDateString('en-US', { month: 'long' }).toLowerCase()}`} class="date-link" title={`See ${new Date(post.data.publishDate).toLocaleDateString('en-US', { month: 'long' })} ${new Date(post.data.publishDate).getFullYear()}'s archive`}>
                  {new Date(post.data.publishDate).toLocaleDateString('en-CA')}
                </a>
              </time>
              <a href={`/blog/${post.slug}`} class="article-title">
                {post.data.title}
              </a>
              {post.data.tags && post.data.tags.length > 0 && (
                <div class="article-tags">
                  {post.data.tags.sort((a, b) => a.localeCompare(b)).slice(0, 3).map(postTag => (
                    <a href={`/topics/${postTag.toLowerCase().replace(/\s+/g, '-')}`} class="article-tag">{postTag}</a>
                  ))}
                </div>
              )}
            </div>
          </article>
        ))}
      </div>
      
    </section>
    
    {products.length > 0 && (
      <section class="products-section">
        <h2>Products</h2>
        <div class="articles-list">
          {products.map(product => (
            <article class="article-item">
              <div class="article-line">
                <time class="article-date">
                  <a href={`/archive/${new Date(product.data.publishDate).getFullYear()}/${new Date(product.data.publishDate).toLocaleDateString('en-US', { month: 'long' }).toLowerCase()}`} class="date-link" title={`See ${new Date(product.data.publishDate).toLocaleDateString('en-US', { month: 'long' })} ${new Date(product.data.publishDate).getFullYear()}'s archive`}>
                    {new Date(product.data.publishDate).toLocaleDateString('en-CA')}
                  </a>
                </time>
                <a href={product.data.url} class="article-title" target="_blank" rel="noopener noreferrer">
                  {product.data.title}
                </a>
                {product.data.tags && product.data.tags.length > 0 && (
                  <div class="article-tags">
                    {product.data.tags.sort((a, b) => a.localeCompare(b)).slice(0, 3).map(productTag => (
                      <a href={`/topics/${productTag.toLowerCase().replace(/\s+/g, '-')}`} class="article-tag">{productTag}</a>
                    ))}
                  </div>
                )}
              </div>
            </article>
          ))}
        </div>
      </section>
    )}
    
    {posts.length === 0 && products.length === 0 && (
      <div class="no-posts">
        <p>No content found for this topic.</p>
        <a href="/blog" class="back-to-blog">← Back to Journal</a>
      </div>
    )}
    
    <footer class="topic-footer">
      <a href="/blog" class="back-to-blog">← Back to Journal</a>
      <a href="/topics" class="all-topics">View All Topics →</a>
    </footer>
  </main>
</Layout>

<style>
  .container {
    max-width: 1000px;
    margin: 0 auto;
    padding: 2rem 1rem;
  }
  
  .topic-header {
    text-align: center;
    margin-bottom: 3rem;
    padding: 2rem 0;
    border-bottom: 1px solid var(--border-light);
    position: relative;
  }
  
  .topic-header::after {
    content: '';
    position: absolute;
    bottom: -1px;
    left: 50%;
    transform: translateX(-50%);
    width: 80px;
    height: 1px;
    background: var(--color-primary);
  }
  
  .topic-tag {
    background: var(--color-primary);
    color: var(--text-inverse);
    padding: 0.5rem 1rem;
    border-radius: 20px;
    font-size: 0.875rem;
    font-weight: 600;
    letter-spacing: 0.5px;
    text-transform: uppercase;
    display: inline-block;
    margin-bottom: 1rem;
  }
  
  .topic-header h1 {
    font-size: 2.5rem;
    color: var(--text-primary);
    margin-bottom: 1rem;
    font-weight: 700;
  }
  
  .topic-description {
    color: var(--text-muted);
    font-size: 1.125rem;
    margin: 0;
  }
  
  .posts-section h2,
  .products-section h2 {
    font-size: 1.25rem;
    font-weight: 600;
    color: var(--text-primary);
    margin-bottom: 1.5rem;
    margin-top: 2rem;
    border-bottom: 1px solid var(--border-light);
    padding-bottom: 0.75rem;
  }
  
  .posts-section:first-of-type h2 {
    margin-top: 0;
  }
  
  .articles-list {
    padding: 0;
    margin-bottom: 0;
  }

  .article-item {
    margin: 0;
    padding: 0;
  }

  .article-line {
    display: flex;
    align-items: baseline;
    gap: 1rem;
    padding: 0.5rem 0;
    margin-bottom: 0.25rem;
    transition: background-color 0.2s ease;
    border-bottom: 1px solid transparent;
  }

  .article-line:hover {
    background: rgba(0, 0, 0, 0.02);
  }

  .article-date {
    color: var(--text-muted);
    font-size: 0.8rem;
    font-weight: 400;
    line-height: 1.4;
    white-space: nowrap;
    flex-shrink: 0;
    min-width: 80px;
  }

  .date-link {
    color: var(--text-muted);
    text-decoration: none;
    transition: color 0.2s ease;
    border-bottom: 1px solid transparent;
  }

  .date-link:hover {
    color: var(--color-primary);
    border-bottom-color: var(--color-primary);
  }

  .date-link:visited {
    color: var(--text-muted);
  }

  .date-link:visited:hover {
    color: var(--color-primary);
    border-bottom-color: var(--color-primary);
  }

  .article-title {
    color: var(--text-primary);
    text-decoration: none;
    font-size: 0.95rem;
    font-weight: 400;
    line-height: 1.4;
    transition: color 0.2s ease;
    border-bottom: 1px dotted var(--text-muted);
    flex: 1;
    min-width: 0;
  }

  .article-title:hover {
    color: var(--color-primary);
    border-bottom-color: var(--color-primary);
  }

  .article-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0;
    align-items: baseline;
    flex-shrink: 0;
    min-height: 1.4em;
  }

  .article-tag {
    color: #FF8C00;
    font-size: 0.75rem;
    font-weight: 400;
    text-decoration: none;
    transition: color 0.2s ease;
    line-height: 1.4;
    display: inline-flex;
    align-items: center;
  }

  .article-tag:hover {
    color: #FF4500;
  }

  .article-tag:not(:last-child)::after {
    content: ", ";
    color: var(--text-muted);
  }
  
  .no-posts {
    text-align: center;
    padding: 3rem;
    color: var(--text-muted);
  }
  
  .topic-footer {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding-top: 2rem;
    border-top: 1px solid var(--border-light);
  }
  
  .back-to-blog,
  .all-topics {
    color: var(--color-primary);
    font-weight: 500;
    text-decoration: none;
    transition: color 0.3s ease;
  }
  
  .back-to-blog:hover,
  .all-topics:hover {
    color: var(--color-primary-hover);
  }
  
  @media (max-width: 768px) {
    .container {
      padding: 1.5rem 1rem;
    }
    
    .topic-header h1 {
      font-size: 2rem;
    }

    .article-line {
      flex-direction: column;
      align-items: flex-start;
      gap: 0.25rem;
      padding: 0.4rem 0;
    }

    .article-date {
      font-size: 0.75rem;
      min-width: auto;
    }

    .article-title {
      border-bottom: none;
      width: 100%;
    }

    .article-tags {
      width: 100%;
    }
    
    .topic-footer {
      flex-direction: column;
      gap: 1rem;
      align-items: center;
    }
  }
  
  @media (max-width: 480px) {
    .container {
      padding: 1rem 0.75rem;
    }

    .article-line {
      padding: 0.75rem;
    }
  }
</style>