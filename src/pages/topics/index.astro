---
import Layout from '../../layouts/Layout.astro';
import { getCollection } from 'astro:content';

// Get all blog posts and products to extract tags
const allBlogPosts = await getCollection('blog', ({ data }) => {
  return !data.draft && new Date(data.publishDate) <= new Date();
});

const allProducts = await getCollection('products', ({ data }) => {
  return !data.draft;
});

// Get all unique tags with counts from both blog posts and products
const tagCounts = {};
allBlogPosts.forEach(post => {
  post.data.tags.forEach(tag => {
    tagCounts[tag] = (tagCounts[tag] || 0) + 1;
  });
});
allProducts.forEach(product => {
  product.data.tags.forEach(tag => {
    tagCounts[tag] = (tagCounts[tag] || 0) + 1;
  });
});

// Convert to array and sort alphabetically
const allTags = Object.entries(tagCounts)
  .map(([tag, count]) => ({ tag, count }))
  .sort((a, b) => a.tag.localeCompare(b.tag));

// Get recent posts for featured content
const recentPosts = allBlogPosts
  .sort((a, b) => new Date(b.data.publishDate).getTime() - new Date(a.data.publishDate).getTime())
  .slice(0, 3);
---

<Layout title="Topics - Explore by Interest" description="Browse articles by topic and find content that interests you most.">
  <main class="container">
    <header class="page-header">
      <h1>Browse by Topic</h1>
      <p class="page-description">
        Explore {allBlogPosts.length + allProducts.length} items ({allBlogPosts.length} articles, {allProducts.length} products) across {allTags.length} topics covering finance, art, technology, and culture.
      </p>
    </header>
    
    <section class="topics-section">
      <h2>All Topics</h2>
      <div class="topics-list">
        {allTags.map(({ tag, count }) => (
          <a href={`/topics/${tag.toLowerCase().replace(/\s+/g, '-')}`} class="topic-link">
            {tag} ({count})
          </a>
        ))}
      </div>
    </section>
    
    <section class="recent-section">
      <h2>Recent Articles</h2>
      <div class="articles-list">
        {recentPosts.map(post => (
          <article class="article-item">
            <div class="article-line">
              <time class="article-date">
                {(() => {
                  const date = new Date(post.data.publishDate);
                  const year = date.getFullYear();
                  const month = date.toLocaleDateString('en-US', { month: 'long' });
                  const monthLower = month.toLowerCase();
                  const formattedDate = date.toLocaleDateString('en-CA');
                  return (
                    <a href={`/archive/${year}/${monthLower}`} class="date-link" title={`See ${month} ${year}'s archive`}>
                      {formattedDate}
                    </a>
                  );
                })()}
              </time>
              <a href={`/blog/${post.slug}`} class="article-title">
                {post.data.title}
              </a>
              {post.data.tags && post.data.tags.length > 0 && (
                <div class="article-tags">
                  {post.data.tags.slice(0, 3).map((tag, index, array) => (
                    <>
                      <a href={`/topics/${tag.toLowerCase().replace(/\s+/g, '-')}`} class="article-tag">{tag}</a>
                      {index < array.length - 1 && ' '}
                    </>
                  ))}
                </div>
              )}
            </div>
          </article>
        ))}
      </div>
    </section>
    
    <footer class="topics-footer">
      <a href="/blog" class="back-to-blog">‚Üê Back to Journal</a>
    </footer>
  </main>
</Layout>

<style>
  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem 1rem;
  }
  
  .page-header {
    text-align: center;
    margin-bottom: 4rem;
    padding-bottom: 2rem;
    border-bottom: 1px solid var(--border-light);
    position: relative;
  }
  
  .page-header::after {
    content: '';
    position: absolute;
    bottom: -1px;
    left: 50%;
    transform: translateX(-50%);
    width: 100px;
    height: 1px;
    background: var(--color-primary);
  }
  
  .page-header h1 {
    font-size: 3rem;
    color: var(--text-primary);
    margin-bottom: 1rem;
    font-weight: 700;
  }
  
  .page-description {
    color: var(--text-muted);
    font-size: 1.25rem;
    max-width: 600px;
    margin: 0 auto;
    line-height: 1.6;
  }
  
  .topics-section {
    margin-bottom: 4rem;
  }
  
  .topics-section h2 {
    font-size: 1.5rem;
    color: var(--text-primary);
    margin-bottom: 2rem;
    font-weight: 600;
    text-align: center;
  }
  
  .topics-list {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem 2rem;
    justify-content: center;
    align-items: center;
    max-width: 800px;
    margin: 0 auto;
  }
  
  .topic-link {
    color: var(--text-primary);
    text-decoration: none;
    font-size: 0.95rem;
    font-weight: 400;
    line-height: 1.4;
    transition: color 0.2s ease;
    border-bottom: 1px dotted var(--text-muted);
    white-space: nowrap;
  }

  .topic-link:hover {
    color: var(--color-primary);
    border-bottom-color: var(--color-primary);
  }
  
  .recent-section {
    margin-bottom: 3rem;
  }
  
  .recent-section h2 {
    font-size: 1.25rem;
    font-weight: 600;
    color: var(--text-primary);
    margin-bottom: 1.5rem;
    border-bottom: 1px solid var(--border-light);
    padding-bottom: 0.75rem;
  }
  
  .articles-list {
    padding: 0;
    margin-bottom: 0;
  }

  .article-item {
    margin: 0;
    padding: 0;
  }

  .article-line {
    display: flex;
    align-items: baseline;
    gap: 1rem;
    padding: 0.5rem 0;
    margin-bottom: 0.25rem;
    transition: background-color 0.2s ease;
    border-bottom: 1px solid transparent;
  }

  .article-line:hover {
    background: rgba(0, 0, 0, 0.02);
  }

  .article-date {
    color: var(--text-muted);
    font-size: 0.8rem;
    font-weight: 400;
    white-space: nowrap;
    flex-shrink: 0;
    min-width: 80px;
  }

  .date-link {
    color: var(--text-muted);
    text-decoration: none;
    transition: color 0.2s ease;
    border-bottom: 1px solid transparent;
  }

  .date-link:hover {
    color: var(--color-primary);
    border-bottom-color: var(--color-primary);
  }

  .date-link:visited {
    color: var(--text-muted);
  }

  .date-link:visited:hover {
    color: var(--color-primary);
    border-bottom-color: var(--color-primary);
  }

  .article-title {
    color: var(--text-primary);
    text-decoration: none;
    font-size: 0.95rem;
    font-weight: 400;
    line-height: 1.4;
    transition: color 0.2s ease;
    border-bottom: 1px dotted var(--text-muted);
    flex: 1;
    min-width: 0;
  }

  .article-title:hover {
    color: var(--color-primary);
    border-bottom-color: var(--color-primary);
  }

  .article-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0;
    align-items: baseline;
    flex-shrink: 0;
  }

  .article-tag {
    color: #FF8C00;
    font-size: 0.75rem;
    font-weight: 400;
    text-decoration: none;
    transition: color 0.2s ease;
  }

  .article-tag:hover {
    color: #FF4500;
  }

  .article-tag:not(:last-child)::after {
    content: ", ";
    color: var(--text-muted);
    display: inline;
  }
  
  .topics-footer {
    text-align: center;
    padding-top: 2rem;
    border-top: 1px solid var(--border-light);
  }
  
  .back-to-blog {
    color: var(--color-primary);
    font-weight: 500;
    text-decoration: none;
    transition: color 0.3s ease;
    font-size: 1.125rem;
  }
  
  .back-to-blog:hover {
    color: var(--color-primary-hover);
  }
  
  @media (max-width: 768px) {
    .page-header h1 {
      font-size: 2.5rem;
    }
    
    .topics-list {
      gap: 0.75rem 1.5rem;
      max-width: 100%;
    }
    
    .article-line {
      flex-direction: column;
      align-items: flex-start;
      gap: 0.25rem;
      padding: 0.4rem 0;
    }

    .article-date {
      font-size: 0.75rem;
      min-width: auto;
    }

    .article-title {
      border-bottom: none;
      width: 100%;
    }

    .article-tags {
      width: 100%;
    }
  }
</style>